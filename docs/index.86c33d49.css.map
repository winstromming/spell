{"mappings":"AC6CA,gC,+BAMA,yFAIE,sGAGF,gFAIA,6GAGA,yOAWE,iEAGA,6EAKA,mECfF,oD,4DAQA,6EAIE,0D,uD,wCAaA,8CAGF,sE,uGC2HA,mF,kCAQA,yJAQE,oEAIA,+DCnOF,+FCsGA,iB,yEAQA","sources":["index.86c33d49.css","code/components/Card.vue","code/components/Dots.vue","code/components/Health.vue","code/components/Navigation.vue","code/index.vue"],"sourcesContent":[".card[data-disabled] {\n  opacity: .7;\n}\n\n.card > .n-card-header {\n  padding: 0;\n}\n\n.card > .n-card-header > .n-card-header__extra {\n  padding-right: var(--n-padding-left);\n  z-index: 2;\n}\n\n.card > .n-card-header .n-card-header__main .n-button {\n  padding: var(--n-padding-top) var(--n-padding-left);\n}\n\n.card > .n-card-header .n-card-header__main .n-button__content {\n  flex: 1;\n  width: 100px;\n}\n\n.card > .n-card-header .n-card-header__main .n-button__content .card-title {\n  padding-right: var(--n-padding-left);\n}\n\n.card > .n-card-header .n-card-header__main .n-button__content .card-summary {\n  text-align: right;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  flex: 1;\n  justify-content: flex-end;\n  align-items: flex-end;\n  font-size: 85%;\n  line-height: 1.5;\n  overflow: hidden;\n}\n\n.card .n-card__action {\n  border-top: 1px solid var(--n-border-color);\n}\n\n.card.n-card {\n  box-shadow: var(--n-box-shadow);\n  border-width: 0;\n  border-radius: 5px;\n}\n\n.card.n-card .n-card-header__extra {\n  flex: 1;\n  justify-content: flex-end;\n}\n\n.dots-input {\n  flex: 1;\n  background-color: #0000 !important;\n}\n\n.dots-input .n-input-wrapper {\n  padding-left: 0;\n  padding-right: 0;\n}\n\n.dots-input .n-input__border, .dots-input .n-input__state-border {\n  display: none;\n}\n\n.dots-check, .dots-input .n-input__prefix {\n  margin-right: 6px;\n}\n\n.dots-input .n-input__suffix {\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n.dots-rate.n-rate {\n  vertical-align: middle;\n}\n\n.dots-rate.n-rate .n-rate__item {\n  margin-left: 0;\n}\n\n.dots-rate.n-rate .n-rate__item svg circle {\n  stroke: var(--n-text-color);\n}\n\n.dots-rate.n-rate .n-rate__item--active svg circle {\n  fill: var(--n-text-color);\n  stroke: var(--n-text-color);\n}\n\n.health[data-v-bbd162] {\n  background-color: var(--n-color);\n  min-width: 100%;\n  display: flex;\n}\n\n.health > div[data-v-bbd162] {\n  flex: 1;\n}\n\n.health .n-button[data-v-bbd162] {\n  flex-grow: 1;\n  flex-shrink: 1;\n  padding-left: 3px;\n  padding-right: 3px;\n  display: inline-flex;\n  border-color: var(--n-border) !important;\n}\n\n.health .n-button--disabled[data-v-bbd162] {\n  opacity: 1;\n  cursor: default;\n}\n\n.health .n-button--disabled .n-icon[data-v-bbd162] {\n  opacity: .25;\n}\n\n.navigation {\n  background: var(--n-color);\n  height: 50px;\n  padding: 0 24px;\n  box-shadow: 0 0 20px #00000040;\n}\n\nhtml {\n  height: 100%;\n}\n\nbody {\n  background-color: var(--n-color-bg-base);\n  height: 100%;\n  overflow: hidden;\n}\n\n.bg {\n  background-color: var(--n-color-bg-base);\n}\n\n.card[data-disabled] {\n  opacity: .7;\n}\n\n.card > .n-card-header {\n  padding: 0;\n}\n\n.card > .n-card-header > .n-card-header__extra {\n  padding-right: var(--n-padding-left);\n  z-index: 2;\n}\n\n.card > .n-card-header .n-card-header__main .n-button {\n  padding: var(--n-padding-top) var(--n-padding-left);\n}\n\n.card > .n-card-header .n-card-header__main .n-button__content {\n  flex: 1;\n  width: 100px;\n}\n\n.card > .n-card-header .n-card-header__main .n-button__content .card-title {\n  padding-right: var(--n-padding-left);\n}\n\n.card > .n-card-header .n-card-header__main .n-button__content .card-summary {\n  text-align: right;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  flex: 1;\n  justify-content: flex-end;\n  align-items: flex-end;\n  font-size: 85%;\n  line-height: 1.5;\n  overflow: hidden;\n}\n\n.card .n-card__action {\n  border-top: 1px solid var(--n-border-color);\n}\n\n.card.n-card {\n  box-shadow: var(--n-box-shadow);\n  border-width: 0;\n  border-radius: 5px;\n}\n\n.card.n-card .n-card-header__extra {\n  flex: 1;\n  justify-content: flex-end;\n}\n\n.dots-input {\n  flex: 1;\n  background-color: #0000 !important;\n}\n\n.dots-input .n-input-wrapper {\n  padding-left: 0;\n  padding-right: 0;\n}\n\n.dots-input .n-input__border, .dots-input .n-input__state-border {\n  display: none;\n}\n\n.dots-check, .dots-input .n-input__prefix {\n  margin-right: 6px;\n}\n\n.dots-input .n-input__suffix {\n  flex-grow: 0;\n  flex-shrink: 0;\n}\n\n.dots-rate.n-rate {\n  vertical-align: middle;\n}\n\n.dots-rate.n-rate .n-rate__item {\n  margin-left: 0;\n}\n\n.dots-rate.n-rate .n-rate__item svg circle {\n  stroke: var(--n-text-color);\n}\n\n.dots-rate.n-rate .n-rate__item--active svg circle {\n  fill: var(--n-text-color);\n  stroke: var(--n-text-color);\n}\n\n.health[data-v-bbd162] {\n  background-color: var(--n-color);\n  min-width: 100%;\n  display: flex;\n}\n\n.health > div[data-v-bbd162] {\n  flex: 1;\n}\n\n.health .n-button[data-v-bbd162] {\n  flex-grow: 1;\n  flex-shrink: 1;\n  padding-left: 3px;\n  padding-right: 3px;\n  display: inline-flex;\n  border-color: var(--n-border) !important;\n}\n\n.health .n-button--disabled[data-v-bbd162] {\n  opacity: 1;\n  cursor: default;\n}\n\n.health .n-button--disabled .n-icon[data-v-bbd162] {\n  opacity: .25;\n}\n\n.navigation {\n  background: var(--n-color);\n  height: 50px;\n  padding: 0 24px;\n  box-shadow: 0 0 20px #00000040;\n}\n\nhtml {\n  height: 100%;\n}\n\nbody {\n  background-color: var(--n-color-bg-base);\n  height: 100%;\n  overflow: hidden;\n}\n\n.bg {\n  background-color: var(--n-color-bg-base);\n}\n\n/*# sourceMappingURL=index.86c33d49.css.map */\n","<template>\n  <n-card size=\"small\" class=\"card\">\n    <template #header v-if=\"title && title.length > 0\">\n      <n-button size=\"large\" text block @click=\"!icon ? data.open = !data.open : undefined\">\n        <template #icon>\n          <slot name=\"icon\">\n            <n-icon>\n              <ChevronUp v-if=\"data.open == true\" />\n              <ChevronDown v-if=\"data.open === false\" />\n            </n-icon>\n          </slot>\n        </template>\n        <n-text strong class=\"card-title\">{{ title }}</n-text>\n        <n-text v-if=\"summary\" depth=\"3\" class=\"card-summary\" editable>{{ summary }}</n-text>\n      </n-button>\n    </template>\n    <template #header-extra>\n      <slot name=\"header\"></slot>\n    </template>\n    <template #default v-if=\"data.open === true\">\n      <slot name=\"content\"></slot>\n    </template>\n    <template #action v-if=\"data.open === true\">\n      <slot name=\"footer\"></slot>\n    </template>\n  </n-card>\n</template>\n\n<script setup lang=\"ts\">\nimport { ChevronDown, ChevronUp } from \"@vicons/ionicons5\"\nimport { reactive } from \"vue\";\n\nconst props = defineProps<{\n  title?: string;\n  summary?: string;\n  collapsed?: boolean;\n  icon?: boolean;\n}>();\n\nconst data = reactive({\n  open: props.collapsed !== undefined ? !props.collapsed : false\n});\n</script>\n\n<style>\n.card[data-disabled] {\n  opacity: 0.7\n}\n\n.card>.n-card-header {\n  padding: 0;\n}\n\n.card>.n-card-header>.n-card-header__extra {\n  padding-right: var(--n-padding-left);\n  z-index: 2;\n}\n\n.card>.n-card-header .n-card-header__main .n-button {\n  padding: var(--n-padding-top) var(--n-padding-left);\n}\n\n.card>.n-card-header .n-card-header__main .n-button__content {\n  flex: 1;\n  width: 100px;\n}\n\n.card>.n-card-header .n-card-header__main .n-button__content .card-title {\n  padding-right: var(--n-padding-left);\n}\n\n.card>.n-card-header .n-card-header__main .n-button__content .card-summary {\n  flex: 1;\n  align-items: flex-end;\n  justify-content: flex-end;\n  text-align: right;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: 85%;\n  line-height: 1.5;\n}\n\n.card .n-card__action {\n  border-top: 1px solid var(--n-border-color);\n}\n\n.card.n-card {\n  border-radius: 5px;\n  border-width: 0;\n  box-shadow: var(--n-box-shadow);\n}\n\n.card.n-card .n-card-header__extra {\n  flex: 1;\n  justify-content: flex-end;\n}\n</style>\n","<template>\n  <n-input class=\"dots-input\" size=\"small\" :readonly=\"props.isEditable === false\" type=\"text\" :value=\"props.label\"\n    :on-update:value=\"updateLabel\" :placeholder=\"props.placeholder ?? ''\">\n    <template #prefix v-if=\"props.name || props.checked !== undefined\">\n      <n-checkbox class=\"dots-check\" v-if=\"props.checked !== undefined\" size=\"small\" :disabled=\"props.checkedDisabled\"\n        v-model:checked=\"props.checked\" :on-update:checked=\"updateChecked\" />\n      <n-text v-if=\"props.name\" strong>{{ props.name }}</n-text>\n    </template>\n    <template #suffix v-if=\"props.dots !== undefined\">\n      <n-rate class=\"dots-rate\" size=\"small\" clearable :count=\"props.max\" v-model:value=\"props.dots\"\n        :on-update:value=\"updateDots\">\n        <n-icon :component=\"EllipseOutline\">\n          <EllipseOutline />\n        </n-icon>\n      </n-rate>\n    </template>\n  </n-input>\n</template>\n\n<script setup lang=\"ts\">\nimport { EllipseOutline } from '@vicons/ionicons5';\n\nconst props = defineProps({\n  name: {\n    type: String,\n    default: undefined,\n  },\n  dots: {\n    type: Number,\n    default: undefined,\n  },\n  placeholder: {\n    type: String,\n    default: \"\",\n  },\n  label: {\n    type: String,\n    default: undefined,\n  },\n  isEditable: {\n    type: Boolean,\n    default: false,\n  },\n  checked: {\n    type: Boolean,\n    default: undefined\n  },\n  checkedDisabled: {\n    type: Boolean,\n    default: false,\n  },\n  max: {\n    type: Number,\n    default: 5,\n  }\n});\n\nconst emit = defineEmits<{\n  (event: \"updateDots\", dots: number): void;\n  (event: \"updateLabel\", label: string): void;\n  (event: \"updateChecked\", check: boolean): void;\n}>();\n\nconst updateDots = (dots: number) => emit(\"updateDots\", dots);\nconst updateLabel = (label: string) => emit(\"updateLabel\", label);\nconst updateChecked = (checked: boolean) => emit(\"updateChecked\", checked);\n</script>\n\n<style>\n.dots-input {\n  flex: 1;\n  background-color: transparent !important;\n}\n\n.dots-input .n-input-wrapper {\n  padding-left: 0;\n  padding-right: 0;\n}\n\n.dots-input .n-input__border,\n.dots-input .n-input__state-border {\n  display: none;\n}\n\n.dots-check {\n  margin-right: 6px\n}\n\n.dots-input .n-input__prefix {\n  margin-right: 6px;\n}\n\n.dots-input .n-input__suffix {\n  flex-shrink: 0;\n  flex-grow: 0;\n}\n\n.dots-rate.n-rate {\n  vertical-align: middle;\n}\n\n.dots-rate.n-rate .n-rate__item {\n  margin-left: 0;\n}\n\n.dots-rate.n-rate .n-rate__item svg circle {\n  stroke: var(--n-text-color);\n}\n\n.dots-rate.n-rate .n-rate__item--active svg circle {\n  fill: var(--n-text-color);\n  stroke: var(--n-text-color);\n}\n</style>","<template>\n  <Card title=\"Health\" :icon=\"true\">\n    <template #icon>\n      <n-icon>\n        <HeartOutline />\n      </n-icon>\n    </template>\n    <template #header>\n      <n-popover trigger=\"click\" placement=\"top\">\n        <template #trigger>\n          <n-button quaternary type=\"error\" size=\"small\" title=\"Suffer damage\">\n            <template #icon>\n              <n-icon :component=\"EllipsisHorizontal\" />\n            </template>\n          </n-button>\n        </template>\n        <n-button title=\"Aggravated\" quaternary type=\"error\" size=\"small\" @click=\"sufferAggravated\">\n          <template #icon>\n            <n-icon :component=\"SkullOutline\" />\n          </template>\n        </n-button>\n        <n-button title=\"Lethal\" quaternary type=\"error\" size=\"small\" @click=\"sufferLethal\">\n          <template #icon>\n            <n-icon :component=\"WaterOutline\" />\n          </template>\n        </n-button>\n        <n-button title=\"Bashing\" quaternary type=\"error\" size=\"small\" @click=\"sufferBashing\">\n          <template #icon>\n            <n-icon :component=\"BandageOutline\" />\n          </template>\n        </n-button>\n      </n-popover>\n    </template>\n    <template #footer>\n      <n-space vertical>\n        <n-button-group class=\"health\">\n          <n-tooltip trigger=\"hover\" v-for=\"(amount, index) of caster.health.aggravated\"\n            :disabled=\"caster.health.lethal > 0 || index + 1 !== caster.health.aggravated\">\n            <template #trigger>\n              <n-button :disabled=\"caster.health.lethal > 0 || index + 1 !== caster.health.aggravated\" size=\"small\"\n                @click=\"healDamage\">\n                <template #icon>\n                  <n-icon :component=\"SkullOutline\" />\n                </template>\n              </n-button>\n            </template>\n            Heal (1 week)\n          </n-tooltip>\n          <n-tooltip trigger=\"hover\" v-for=\"(amount, index) of caster.health.lethal\"\n            :disabled=\"caster.health.bashing > 0 || index + 1 !== caster.health.lethal\">\n            <template #trigger>\n              <n-button :disabled=\"caster.health.bashing > 0 || index + 1 !== caster.health.lethal\" size=\"small\"\n                @click=\"healDamage\">\n                <template #icon>\n                  <n-icon :component=\"WaterOutline\" />\n                </template>\n              </n-button>\n            </template>\n            Heal (2 days)\n          </n-tooltip>\n          <n-tooltip trigger=\"hover\" v-for=\"(amount, index) of caster.health.bashing\"\n            :disabled=\"index + 1 !== caster.health.bashing\">\n            <template #trigger>\n              <n-button :disabled=\"index + 1 !== caster.health.bashing\" size=\"small\" @click=\"healDamage\">\n                <template #icon>\n                  <n-icon :component=\"BandageOutline\" />\n                </template>\n              </n-button>\n            </template>\n            Heal (15 mins)\n          </n-tooltip>\n          <n-button v-for=\"amount in remaining\" disabled size=\"small\">\n            <template #icon>\n              <n-icon :component=\"Square\" style=\"opacity: 0\" />\n            </template>\n          </n-button>\n        </n-button-group>\n        <n-grid x-gap=\"12\" y-gap=\"12\" :cols=\"2\">\n          <n-gi>\n            <n-input-number v-model:value=\"caster.traits.Mana\" :format=\"asMana\" :parse=\"parse\" size=\"small\" min=\"0\"\n              :max=\"mana\">\n            </n-input-number>\n          </n-gi>\n          <n-gi>\n            <n-input-number v-model:value=\"caster.traits.Willpower\" size=\"small\" min=\"0\" :max=\"willpower\"\n              :format=\"asWillpower\" :parse=\"parse\">\n            </n-input-number>\n          </n-gi>\n        </n-grid>\n        <n-alert type=\"warning\" v-if=\"summary\">\n          <n-text v-html=\"summary\" />\n        </n-alert>\n      </n-space>\n    </template>\n  </Card>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, ref, watch } from \"vue\";\nimport { caster } from \"../store/store\";\nimport Card from \"../components/Card.vue\";\nimport { HeartOutline, EllipsisHorizontal, SkullOutline, BandageOutline, WaterOutline, Square } from \"@vicons/ionicons5\"\n\nconst size = computed(() => {\n  let size = caster.traits.Size.base ?? 0\n  if (caster.traits.Size.modifier && caster.traits.Size.modifier > 0) size = caster.traits.Size.modifier\n  return size\n})\n\nwatch(caster, () => {\n  caster.health.maximum.base = size.value + caster.attributes.physical.Stamina.dots\n});\n\nonMounted(() => {\n  caster.health.maximum.base = size.value + caster.attributes.physical.Stamina.dots\n})\n\nconst asMana = (num: number | null) => {\n  return `${num ?? 0}/${mana.value} Mana`\n}\nconst asWillpower = (num: number | null) => {\n  return `${num ?? 0}/${willpower.value} Willpower`\n}\nconst parse = (input: string) => {\n  const nums = input.split(\"/\")[0].replace(/[^0-9]+/g, '').trim()\n  return nums === '' ? null : Number(nums)\n}\n\nconst willpower = computed(() => {\n  return caster.attributes.mental.Resolve.dots + caster.attributes.social.Composure.dots;\n});\n\nconst mana = computed(() => {\n  switch (caster.traits.Gnosis) {\n    case 0: return 0;\n    case 1: return 10;\n    case 2: return 11;\n    case 3: return 12;\n    case 4: return 13;\n    case 5: return 15;\n    case 6: return 20;\n    case 7: return 25;\n    case 8: return 30;\n    case 9: return 50;\n    case 10: return 75;\n  }\n})\n\nconst remaining = computed(() => {\n  let num = caster.health.maximum.base - caster.health.bashing - caster.health.lethal - caster.health.aggravated\n  return num < 0 ? 0 : num\n})\n\nconst healDamage = () => {\n  if (caster.health.bashing > 0) {\n    caster.health.bashing -= 1;\n  } else if (caster.health.lethal > 0) {\n    caster.health.lethal -= 1;\n  } else if (caster.health.aggravated > 0) {\n    caster.health.aggravated -= 1;\n  }\n}\n\nconst sufferBashing = () => {\n  if (remaining.value === 0) {\n    if (caster.health.bashing > 0) {\n      caster.health.bashing -= 1;\n      caster.health.lethal += 1;\n    } else if (caster.health.lethal > 0) {\n      caster.health.lethal -= 1;\n      caster.health.aggravated += 1;\n    }\n  } else {\n    caster.health.bashing += 1;\n  }\n}\nconst sufferLethal = () => {\n  if (remaining.value === 0) {\n    if (caster.health.bashing > 0) {\n      caster.health.bashing -= 1;\n      caster.health.lethal += 1;\n    } else if (caster.health.lethal > 0) {\n      caster.health.lethal -= 1;\n      caster.health.aggravated += 1;\n    }\n  } else {\n    caster.health.lethal += 1;\n  }\n}\nconst sufferAggravated = () => {\n  if (remaining.value === 0) {\n    if (caster.health.bashing > 0) {\n      caster.health.bashing -= 1;\n      caster.health.aggravated += 1;\n    } else if (caster.health.lethal > 0) {\n      caster.health.lethal -= 1;\n      caster.health.aggravated += 1;\n    }\n  } else {\n    caster.health.aggravated += 1;\n  }\n}\n\nconst summary = computed(() => {\n  let remaining = caster.attributes.physical.Stamina.dots + size.value - caster.health.bashing - caster.health.lethal - caster.health.aggravated;\n  if (caster.health.aggravated >= caster.health.maximum.base) return \"You are dead.\";\n  if (remaining > 2) return null\n  let string = [];\n  if (remaining === 0 && caster.health.bashing === 0 && caster.health.lethal > 0) string.push(\"You receive one point damage each turn and\");\n  if (remaining === 0 && caster.health.bashing > 0) string.push(\"You must make roll to stay conscious each turn and\");\n  if (remaining === 0) string.push(\"suffer -3 penalty on every action.\");\n  if (remaining === 1) string.push(\"You suffer -2 penalty on every action.\");\n  if (remaining === 2) string.push(\"You suffer -1 penalty on every action.\");\n  if (string.length === 0) return null;\n  return string.join(\" \");\n})\n\n</script>\n\n<style scoped>\n.health {\n  display: flex;\n  min-width: 100%;\n  background-color: var(--n-color);\n}\n\n.health>div {\n  flex: 1\n}\n\n.health .n-button {\n  flex-grow: 1;\n  flex-shrink: 1;\n  display: inline-flex;\n  padding-left: 3px;\n  padding-right: 3px;\n  border-color: var(--n-border) !important;\n}\n\n.health .n-button--disabled {\n  opacity: 1;\n  cursor: default;\n}\n\n.health .n-button--disabled .n-icon {\n  opacity: 0.25;\n}\n</style>","<template>\n  <n-space align=\"center\" justify=\"space-between\" class=\"navigation\">\n    <Config />\n    <Actions />\n  </n-space>\n</template>\n\n<script setup lang=\"ts\">\nimport Config from \"./Config.vue\";\nimport Actions from \"./Actions.vue\";\n</script>\n\n<style>\n.navigation {\n  background: var(--n-color);\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.25);\n  padding: 0 24px;\n  height: 50px;\n}\n</style>","<template>\n  <n-message-provider>\n    <n-dialog-provider>\n      <n-config-provider :theme=\"theme.value\" :theme-overrides=\"overrides\">\n        <n-layout position=\"absolute\" embedded>\n          <n-layout-header position=\"absolute\" style=\"z-index: 10\">\n            <Navigation />\n          </n-layout-header>\n          <n-layout-content position=\"absolute\" embedded style=\"top: 50px\">\n            <n-space vertical style=\"padding: 24px;\" :size=\"12\">\n              <n-grid y-gap=\"12\" x-gap=\"12\" cols=\"1 600:12\">\n                <n-gi span=\"1 600:12 900:4 1300:6\">\n                  <n-space vertical :size=\"12\">\n                    <Character />\n                    <Attributes />\n                    <Skills />\n                    <n-grid y-gap=\"12\" x-gap=\"12\" cols=\"1 550:2\">\n                      <n-gi>\n                        <Arcana />\n                      </n-gi>\n                      <n-gi>\n                        <Merits />\n                      </n-gi>\n                    </n-grid>\n                    <Notes />\n                  </n-space>\n                </n-gi>\n                <n-gi span=\"1 600:6 900:4 1300:3\">\n                  <n-space vertical :size=\"12\">\n                    <Beats />\n                    <Health />\n                    <Conditions />\n                    <Praxes />\n                    <Rotes />\n                    <Tools />\n                    <Active />\n                    <Saved />\n                  </n-space>\n                </n-gi>\n                <n-gi span=\"1 600:6 900:4 1300:3\">\n                  <n-space vertical :size=\"12\">\n                    <Spell />\n                    <Factors />\n                    <Yantras />\n                    <Paradox />\n                  </n-space>\n                </n-gi>\n              </n-grid>\n            </n-space>\n          </n-layout-content>\n        </n-layout>\n      </n-config-provider>\n    </n-dialog-provider>\n  </n-message-provider>\n</template>\n\n<script setup lang=\"ts\">\n\nimport { watch, toRaw, onBeforeMount } from \"vue\";\nimport { assign, cloneDeep } from \"lodash\";\n\nimport Spell from \"./components/Spell.vue\"\nimport Arcana from \"./components/Arcana.vue\"\nimport Factors from \"./components/Factors.vue\"\nimport Yantras from \"./components/Yantras.vue\"\nimport Paradox from \"./components/Paradox.vue\"\nimport Character from \"./components/Character.vue\"\nimport Attributes from \"./components/Attributes.vue\";\nimport Skills from \"./components/Skills.vue\";\nimport Health from \"./components/Health.vue\";\nimport Beats from \"./components/Beats.vue\";\nimport Praxes from \"./components/Praxes.vue\";\nimport Rotes from \"./components/Rotes.vue\";\nimport Tools from \"./components/Tools.vue\";\nimport Conditions from \"./components/Conditions.vue\";\nimport Merits from \"./components/Merits.vue\";\nimport Active from \"./components/Active.vue\";\nimport Saved from \"./components/Saved.vue\";\nimport Notes from \"./components/Notes.vue\";\nimport Navigation from \"./components/Navigation.vue\";\n\nimport { caster, casters, theme } from \"./store/store\";\n\nconst overrides = {\n  common: {\n    fontWeightStrong: \"600\"\n  }\n}\n\nonBeforeMount(() => {\n  const hasCasters = JSON.parse(localStorage.getItem(\"csp-casters\") ?? \"null\")\n  if (hasCasters) assign(casters, hasCasters)\n  const hasCaster = JSON.parse(localStorage.getItem(\"csp-caster\") ?? \"null\")\n  if (hasCaster) assign(caster, hasCaster)\n})\n\nwatch(caster, () => {\n  if (caster.id === 0) caster.id = Date.now()\n  const raw = cloneDeep(toRaw(caster))\n  localStorage.setItem(\"csp-caster\", JSON.stringify(raw));\n  const has = casters.find(c => c.id === caster.id)\n  if (has) {\n    assign(has, raw)\n  } else {\n    casters.push(raw)\n  }\n})\n\nwatch(casters, () => {\n  localStorage.setItem(\"csp-casters\", JSON.stringify(toRaw(casters)));\n})\n\n</script>\n\n<style>\nhtml {\n  height: 100%;\n}\n\nbody {\n  height: 100%;\n  overflow: hidden;\n  background-color: var(--n-color-bg-base);\n}\n\n.bg {\n  background-color: var(--n-color-bg-base);\n}\n</style>\n"],"names":[],"version":3,"file":"index.86c33d49.css.map"}